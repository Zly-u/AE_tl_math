{

"composition": {


"camera_position": "camera_pos",


"camera_rotation": "camera_rotation",


"camera_target": "camera_target",


"camera_zoom": "camera_zoom",


"compResolution": "compResolution",


"frame_rate": "fps",


"layerPosition": "layerPosition",


"layerScale": "layerScale",


"resolution": "iResolution",


"time_frame": "timef",


"time_sec": "iTime"

},

"effectInfo": {


"description": "//based on https:www.shadertoy.com/view/4sycRw\\n\\nlet's play with camera from AE",


"effectName": "tlMath",


"minimalPluginVersion": 115,


"pluginVersion": 115,


"presetName": "camera_tuto",


"tags": [



"shadertoy",



" camera",



" dots",



" cube"


]

},

"effectMode": {


"evalModeB": false,


"expr_modeB": false,


"gl33_modeB": true

},

"flags": {


"pixelsCallExternalInputB": [



false,



false,



false,



false


],


"presetHasWideInputB": true,


"usesCameraB": true

},

"gl_expression": {


"gl33_frag_error": "compiled successfully",


"gl33_frag_sh": "//based on https:www.shadertoy.com/view/4sycRw\\n\\n#version 330 // glsls version for opengl 3.3\\nuniform float iTime; // call time in seconds iTime in shaderty\\nuniform vec2 iResolution; //resolution of the screen iResolution in shadertoy\\nuniform sampler2D iChannel0;//if you want to import a texture\\n\\nin vec2 out_uvs; //uv coordonate of th screen\\nuniform float camera_zoom;\\nuniform vec3 camera_target;\\nuniform vec3 camera_pos;\\nout vec4 fragColorOut;\\n\\nfloat distLine(vec3 ori, vec3 dir, vec3 pt) {\\n    return length(cross(pt-ori,dir)/length(dir));\\n}\\n\\nfloat drawPoint(vec3 ori, vec3 dir, vec3 pt) {\\n    float dis = distLine(ori,dir,pt);\\n    dis = smoothstep(.06,.05,dis);\\n    return dis;\\n}\\n\\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\\n{\\n    // Normalized pixel coordinates\\n    vec2 uv = fragCoord/iResolution.xy;\\n    uv = (2.*uv)-1.0;\\n    uv.x *= iResolution.x/iResolution.y;\\n    \\n    // Camera\\n    vec3 ori = vec3 (camera_pos.xy/iResolution.xy, camera_pos.z/-300);  // Point of origin for camera\\n    vec3 lookAt = camera_target/vec3(iResolution, 2000); // Look-at point\\n    \\n    \\n    vec3 f = normalize(lookAt-ori); // Forward vector\\n    vec3 r = cross(vec3(.0,.1,.0),f); // Right vector\\n    vec3 u = cross(f,r); // Up vector\\n    \\n    float zoom = (camera_zoom/3000)*0.3+0.2;\\n    vec3 cen = ori+f*zoom;// Center of screen\\n    vec3 itc = cen+uv.x*r+uv.y*u; // Point of intersection\\n    vec3 dir = itc-ori; // Direction of moving camera\\n    \\n    vec3 pt = vec3(0.,0.,2.);\\n    \\n    float img = 0.;\\n    \\n    img += drawPoint(ori,dir,vec3(0.,0.,0.));\\n    img += drawPoint(ori,dir,vec3(0.,0.,1.));\\n    img += drawPoint(ori,dir,vec3(0.,1.,0.));\\n    img += drawPoint(ori,dir,vec3(0.,1.,1.));\\n    img += drawPoint(ori,dir,vec3(1.,0.,0.));\\n    img += drawPoint(ori,dir,vec3(1.,0.,1.));\\n    img += drawPoint(ori,dir,vec3(1.,1.,0.));\\n    img += drawPoint(ori,dir,vec3(1.,1.,1.));\\n    \\n    \\n\\n    // Time varying pixel color\\n    vec3 col = 0.5 + 0.5*cos(uv.xyx+vec3(0,2,4));\\n\\n    // Output to screen\\n    fragColor = vec4(img);\\n}\\n\\n//end of copy from shadertoy.com\\nvoid main(void)\\n{\\n    vec2 fragCoord = vec2(gl_FragCoord.x, iResolution.y - gl_FragCoord.y);\\n    //in our main function lets call the shadertoy main image\\n    mainImage(fragColorOut, gl_FragCoord.xy); \\n}",


"gl33_vert_error": "compiled successfully",


"gl33_vert_sh": "#version 330 \\n in vec4 Position;\\nin vec2 UVs;\\nout vec4 out_pos;\\nout vec2 out_uvs;\\nuniform mat4 ModelviewProjection;\\nvoid main(void)\\n{\\nout_pos = ModelviewProjection * Position; \\n gl_Position = out_pos; \\nout_uvs = UVs;\\n}"

},

"gui_settings": {


"cboxGrp": {



"grpName": "despills",



"grpVisibleB": false,



"params": [




{





"defaultVal": [






0





],





"name": "despillR",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "despillG",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "despillB",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "cbox_4",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "cbox_5",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "cbox_6",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "cbox_7",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "cbox_8",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "cbox_9",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "cbox_10",





"visibleB": false




}



]


},


"colorGrp": {



"grpName": "3d color Group",



"grpVisibleB": false,



"params": [




{





"defaultVal": [






1,






1,






1





],





"name": "color_exemple",





"visibleB": true




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_2",





"visibleB": false




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_3",





"visibleB": false




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_4",





"visibleB": false




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_5",





"visibleB": false




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_6",





"visibleB": false




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_7",





"visibleB": false




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_8",





"visibleB": false




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_9",





"visibleB": false




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_10",





"visibleB": false




}



]


},


"layerGrp": {



"current_layer": {




"name": " iChannel0"



},



"extLayer_1": {




"name": "front",




"visibleB": true



},



"extLayer_2": {




"name": "texture2",




"visibleB": false



},



"extLayer_3": {




"name": "texture3",




"visibleB": false



},



"extLayer_4": {




"name": "texture4",




"visibleB": false



},



"grpName": "Layer Group",



"grpVisibleB": false


},


"pointGrp": {



"grpName": "3d Point Group",



"grpVisibleB": false,



"params": [




{





"defaultVal": [






50,






50,






50





],





"name": "point_1",





"visibleB": false




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_2",





"visibleB": false




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_3",





"visibleB": false




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_4",





"visibleB": false




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_5",





"visibleB": false




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_6",





"visibleB": false




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_7",





"visibleB": false




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_8",





"visibleB": false




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_9",





"visibleB": false




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_10",





"visibleB": false




}



]


},


"rotationGrp": {



"grpName": "rotation Group",



"grpVisibleB": false,



"params": [




{





"defaultVal": [






0





],





"name": "rotation_1",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_2",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_3",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_4",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_5",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_6",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_7",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_8",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_9",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_10",





"visibleB": false




}



]


},


"sliderGrp": {



"grpName": "Slider Group",



"grpVisibleB": false,



"params": [




{





"defaultVal": [






0





],





"name": "amount",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "slider_2",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "slider_3",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "slider_4",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "slider_5",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "slider_6",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "slider_7",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "slider_8",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "slider_9",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "slider_10",





"visibleB": false




}



]


}

},

"math_expression": {


"alphaExpr": "return inChannel;",


"alpha_error": "compiled successfully",


"blueExpr": "return inChannel;",


"blue_error": " compiled successfully",


"commonExpr":  "float getLuma(vec4 text)\\n {\\n return 0.3 * text.r + 0.59 * text.g + 0.11 * text.b; \\n}\\nvec4 textureOffset(sampler2D tex2d, vec2 off) {\\nvec2 uv_AE = out_uvs;\\nuv_AE.x =textUvs.x + off.x; \\nuv_AE.y = textUvs.y + off.y; \\nvec4 textureIn = texture(tex2d, uv_AE); \\n return  textureIn; \\n}",


"common_error": "compiled successfully",


"exprRGBModeB": true,


"expr_rgb_channel":"inputRgb",



"expr_current_channel": "inChannel",


"expr_pix": "pix",


"greenExpr": "return inChannel;",


"green_error": "compiled successfully",


"redExpr": "return inChannel;",


"red_error": "compiled successfully",


"rgbExpr": "return inChannel;",


"rgb_error": "compiled successfully"

}
}