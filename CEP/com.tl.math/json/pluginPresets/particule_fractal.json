{

"composition": {


"camera_position": "camera_pos",


"camera_rotation": "camera_rotation",


"camera_target": "camera_target",


"camera_zoom": "camera_zoom",


"compResolution": "compResolution",


"frame_rate": "fps",


"layerPosition": "layerPosition",


"layerScale": "layerScale",


"resolution": "resolution",


"time_frame": "timef",


"time_sec": "time"

},

"effectInfo": {


"description": "Based on https://www.shadertoy.com/view/MssGD8\\nCreative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License. \\nand autodesk Flame matchboxes from https://logik-matchbook.org/\\nThe shader manage generative particules based on Kleinian Fractals\\n\\n",


"effectName": "tlMath",


"minimalPluginVersion": 115,


"pluginVersion": 115,


"presetName": "Particule Fractale",


"tags": [



"particules",



" space",



" fractal",



" matchbox"


]

},

"effectMode": {


"evalModeB": false,


"expr_modeB": true,


"gl33_modeB": false

},

"flags": {


"pixelsCallExternalInputB": [



false,



false,



false,



false


],


"presetHasWideInputB": true,


"usesCameraB": false

},

"gl_expression": {


"gl33_frag_error": "compiled successfully",


"gl33_frag_sh": "#version 330 // glsls version for opengl 3.3\\n\\n\\nin vec4 out_pos;\\nin vec2 out_uvs;\\nout vec4 fragColorOut;\\nuniform vec2 resolution; \\nuniform vec3 center;\\nuniform float seed;\\nuniform float time;\\nuniform vec3 tint; \\nuniform float paramSpeed;\\nuniform float size;\\n\\nvoid main(void)\\n{\\n    //based on logic matchbox Patticule Fractal https://logik-matchbook.org/\\n\\n\\tfloat s=0.,v=0.;\\n    vec3 offset = vec3 (resolution.x/2 - center.x, resolution.y/2 -center.y, resolution.y/2 -center.z+1);\\n    for (int r=0; r<140; r++) {\\n        vec3 p=vec3(.3,.2,floor(time*paramSpeed)*.005)\\n        +s*vec3((gl_FragCoord.xy+offset.xy)*.00003-vec2(.025,.005),offset.z );\\n        p.z=fract(p.z);\\n        for (int i=0; i<int(seed); i++) p=abs(p)/dot(p,p)*2.-1.;\\n        v+=length(p*p)*(.75-s)*.0015;\\n        s+=0.005;\\n    }\\n    fragColorOut = v*vec4(tint,1.);\\n        \\n}",


"gl33_vert_error": "compiled successfully",


"gl33_vert_sh": "#version 330 \\n in vec4 Position;\\nin vec2 UVs;\\nout vec4 out_pos;\\nout vec2 out_uvs;\\nuniform mat4 ModelviewProjection;\\nvoid main(void)\\n{\\nout_pos = ModelviewProjection * Position; \\n gl_Position = out_pos; \\nout_uvs = UVs;\\n}"

},

"gui_settings": {


"cboxGrp": {



"grpName": "paramWarp",



"grpVisibleB": false,



"params": [




{





"defaultVal": [






0





],





"name": "cbox_1",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "cbox_2",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "cbox_3",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "cbox_4",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "cbox_5",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "cbox_6",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "cbox_7",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "cbox_8",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "cbox_9",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "cbox_10",





"visibleB": false




}



]


},


"colorGrp": {



"grpName": "3d color Group",



"grpVisibleB": true,



"params": [




{





"defaultVal": [






0.9,






0.5,






0.2





],





"name": "tint",





"visibleB": true




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_2",





"visibleB": false




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_3",





"visibleB": false




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_4",





"visibleB": false




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_5",





"visibleB": false




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_6",





"visibleB": false




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_7",





"visibleB": false




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_8",





"visibleB": false




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_9",





"visibleB": false




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_10",





"visibleB": false




}



]


},


"layerGrp": {



"current_layer": {




"name": "texture0"



},



"extLayer_1": {




"name": "texture1",




"visibleB": false



},



"extLayer_2": {




"name": "texture2",




"visibleB": false



},



"extLayer_3": {




"name": "texture3",




"visibleB": false



},



"extLayer_4": {




"name": "texture4",




"visibleB": false



},



"grpName": "Layer Group",



"grpVisibleB": false


},


"pointGrp": {



"grpName": "3d Point Group",



"grpVisibleB": true,



"params": [




{





"defaultVal": [






50,






50,






50





],





"name": "center",





"visibleB": true




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_2",





"visibleB": false




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_3",





"visibleB": false




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_4",





"visibleB": false




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_5",





"visibleB": false




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_6",





"visibleB": false




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_7",





"visibleB": false




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_8",





"visibleB": false




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_9",





"visibleB": false




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_10",





"visibleB": false




}



]


},


"rotationGrp": {



"grpName": "rotation Group",



"grpVisibleB": false,



"params": [




{





"defaultVal": [






0





],





"name": "rotation_1",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_2",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_3",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_4",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_5",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_6",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_7",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_8",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_9",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_10",





"visibleB": false




}



]


},


"sliderGrp": {



"grpName": "Slider Group",



"grpVisibleB": true,



"params": [




{





"defaultVal": [






10





],





"name": "paramSpeed",





"visibleB": true




},




{





"defaultVal": [






18





],





"name": "seed",





"visibleB": true




},




{





"defaultVal": [






10





],





"name": "size",





"visibleB": true




},




{





"defaultVal": [






0





],





"name": "slider_4",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "slider_5",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "slider_6",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "slider_7",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "slider_8",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "slider_9",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "slider_10",





"visibleB": false




}



]


}

},

"math_expression": {


"alphaExpr": "return inChannel;",


"alpha_error": "compiled successfully",


"blueExpr": "return inChannel;",


"blue_error": " compiled successfully",


"commonExpr":  "float getLuma(vec4 text)\\n {\\n return 0.3 * text.r + 0.59 * text.g + 0.11 * text.b; \\n}\\nvec4 textureOffset(sampler2D tex2d, vec2 off) {\\nvec2 uv_AE = out_uvs;\\nuv_AE.x =textUvs.x + off.x; \\nuv_AE.y = textUvs.y + off.y; \\nvec4 textureIn = texture(tex2d, uv_AE); \\n return  textureIn; \\n}",


"common_error": "compiled successfully",


"exprRGBModeB": true,


"expr_rgb_channel":"inputRgb",


"expr_current_channel": "inChannel",


"expr_pix": "pix",


"greenExpr": "return inChannel;",


"green_error": "compiled successfully",


"redExpr": "return inChannel;",


"red_error": "compiled successfully",


"rgbExpr": "\\n\\tfloat s=0.,v=0.;\\n    vec3 offset = vec3 (resolution.x/2 - center.x, resolution.y/2 -center.y, resolution.y/2 -center.z+1);\\n    for (int r=0; r<140; r++) {\\n        vec3 p=vec3(.3,.2,floor(time*paramSpeed)*.005)\\n        +s*vec3((gl_FragCoord.xy+offset.xy)*.00003-vec2(.025,.005),offset.z );\\n        p.z=fract(p.z);\\n        for (int i=0; i<int(seed); i++) p=abs(p)/dot(p,p)*2.-1.;\\n        v+=length(p*p)*(.75-s)*.0015;\\n        s+=0.005;\\n    }\\n    return v*tint;",


"rgb_error": "compiled successfully"

}
}