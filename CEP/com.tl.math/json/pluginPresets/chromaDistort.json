{

"composition": {


"camera_position": "camera_pos",


"camera_rotation": "camera_rotation",


"camera_target": "camera_target",


"camera_zoom": "camera_zoom",


"compResolution": "compResolution",


"frame_rate": "fps",


"layerPosition": "layerPosition",


"layerScale": "layerScale",


"resolution": "iResolution",


"time_frame": "timef",


"time_sec": "time"

},

"effectInfo": {


"description": "based on  https://www.shadertoy.com/view/XssGz\\nand k_chroma https://logik-matchbook.org/shader/K_Chroma\\n\\nCreative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License. \\ndistort the chroma channel with distortion.",


"effectName": "tlMath",


"minimalPluginVersion": 115,


"pluginVersion": 115,


"presetName": "chroma_distort",


"tags": [



"shadertoy",



" chroma",



"warp",



" distort",



" distortion",



" color"


]

},

"effectMode": {


"evalModeB": false,


"expr_modeB": false,


"gl33_modeB": true

},

"flags": {


"pixelsCallExternalInputB": [



false,



false,



false,



false


],


"presetHasWideInputB": false,


"usesCameraB": false

},

"gl_expression": {


"gl33_frag_error": "compiled successfully",


"gl33_frag_sh": "#version 330 // glsls version for opengl 3.3\\n//based on  https://www.shadertoy.com/view/XssGz\\\" and k_chroma from https://logik-matchbook.org/\\nuniform sampler2D image;\\nuniform float  chromatic_abb;\\nuniform float d_amount;\\nuniform float num_iter;\\nuniform float s4;\\nuniform bool add_distortion;\\nuniform vec3 center;\\nuniform vec2 iResolution;\\nin vec4 out_pos;\\nin vec2 out_uvs;\\nout vec4 fragColorOut;\\n\\n\\nvec2 barrelDistortion(vec2 coord, float amt) {\\n\\t\\n\\tvec2 cc = ((gl_FragCoord.xy/iResolution.xy) - (center.xy/iResolution.xy));\\n\\tfloat distortion = dot(cc * d_amount * .3, cc);\\n\\n    if ( add_distortion )\\n\\t\\treturn coord + cc * distortion * -1. * amt;\\n\\telse\\n\\t\\treturn coord + cc * amt * -.05;\\n}\\n\\nfloat sat( float t )\\n{\\n\\treturn clamp( t, 0.0, 1.0 );\\n}\\n\\nfloat linterp( float t ) {\\n\\treturn sat( 1.0 - abs( 2.0*t - 1.0 ) );\\n}\\n\\nfloat remap( float t, float a, float b ) {\\n\\treturn sat( (t - a) / (b - a) );\\n}\\n\\nvec3 spectrum_offset( float t ) {\\n\\tvec3 ret;\\n\\tfloat lo = step(t,0.5);\\n\\tfloat hi = (1.0-lo);\\n\\tfloat w = linterp( remap( t, 1.0/6.0, 5.0/6.0 ) );\\n\\tret = vec3(lo,1.0,hi) *vec3(1.0-w, w, 1.0-w);\\n\\n\\treturn pow( ret, vec3(1.0/2.2) );\\n}\\n\\nvoid main()\\n{\\t\\n\\tvec2 uv=(gl_FragCoord.xy/iResolution.xy);\\n\\tuv.y = (1-uv.y);\\n\\tvec3 sumcol = vec3(0.0);\\n\\tvec3 sumw = vec3(0.0);\\t\\n\\tfor ( int i=0; i<int(num_iter);++i )\\n\\t{\\n\\t\\tfloat t = float(i) * (1.0 / num_iter);\\n\\t\\tvec3 w = spectrum_offset( t );\\n\\t\\tsumw += w;\\n\\t\\tsumcol += w *texture( image, barrelDistortion(uv, chromatic_abb * t ) ).rgb;\\n\\t}\\n\\t\\t\\n\\tfragColorOut= vec4(sumcol.rgb / sumw, 1.0);\\n}",


"gl33_vert_error": "compiled successfully",


"gl33_vert_sh": "#version 330 \\n in vec4 Position;\\nin vec2 UVs;\\nout vec4 out_pos;\\nout vec2 out_uvs;\\nuniform mat4 ModelviewProjection;\\nvoid main(void)\\n{\\nout_pos = ModelviewProjection * Position; \\n gl_Position = out_pos; \\nout_uvs = UVs;\\n}"

},

"gui_settings": {


"cboxGrp": {



"grpName": "settings",



"grpVisibleB": true,



"params": [




{





"defaultVal": [






0





],





"name": "add_distortion",





"visibleB": true




},




{





"defaultVal": [






0





],





"name": "cbox_2",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "cbox_3",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "cbox_4",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "cbox_5",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "cbox_6",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "cbox_7",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "cbox_8",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "cbox_9",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "cbox_10",





"visibleB": false




}



]


},


"colorGrp": {



"grpName": "3d color Group",



"grpVisibleB": false,



"params": [




{





"defaultVal": [






1,






1,






1





],





"name": "tint",





"visibleB": false




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_2",





"visibleB": false




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_3",





"visibleB": false




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_4",





"visibleB": false




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_5",





"visibleB": false




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_6",





"visibleB": false




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_7",





"visibleB": false




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_8",





"visibleB": false




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_9",





"visibleB": false




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_10",





"visibleB": false




}



]


},


"layerGrp": {



"current_layer": {




"name": "image"



},



"extLayer_1": {




"name": "texture1",




"visibleB": false



},



"extLayer_2": {




"name": "texture2",




"visibleB": false



},



"extLayer_3": {




"name": "texture3",




"visibleB": false



},



"extLayer_4": {




"name": "texture4",




"visibleB": false



},



"grpName": "Layer Group",



"grpVisibleB": false


},


"pointGrp": {



"grpName": "center",



"grpVisibleB": true,



"params": [




{





"defaultVal": [






50,






50,






50





],





"name": "center",





"visibleB": true




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_2",





"visibleB": false




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_3",





"visibleB": false




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_4",





"visibleB": false




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_5",





"visibleB": false




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_6",





"visibleB": false




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_7",





"visibleB": false




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_8",





"visibleB": false




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_9",





"visibleB": false




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_10",





"visibleB": false




}



]


},


"rotationGrp": {



"grpName": "rotation Group",



"grpVisibleB": false,



"params": [




{





"defaultVal": [






0





],





"name": "rotation_1",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_2",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_3",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_4",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_5",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_6",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_7",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_8",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_9",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_10",





"visibleB": false




}



]


},


"sliderGrp": {



"grpName": "main effect",



"grpVisibleB": true,



"params": [




{





"defaultVal": [






1





],





"name": "chromatic_abb",





"visibleB": true




},




{





"defaultVal": [






20





],





"name": "num_iter",





"visibleB": true




},




{





"defaultVal": [






1





],





"name": "d_amount",





"visibleB": true




},




{





"defaultVal": [






1





],





"name": "s4",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "slider_5",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "slider_6",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "slider_7",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "slider_8",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "slider_9",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "slider_10",





"visibleB": false




}



]


}

},

"math_expression": {


"alphaExpr": "return inChannel;",


"alpha_error": "compiled successfully",


"blueExpr": "return inChannel;",


"blue_error": " compiled successfully",

"commonExpr":  "float getLuma(vec4 text)\\n {\\n return 0.3 * text.r + 0.59 * text.g + 0.11 * text.b; \\n}\\nvec4 textureOffset(sampler2D tex2d, vec2 off) {\\nvec2 uv_AE = out_uvs;\\nuv_AE.x =textUvs.x + off.x; \\nuv_AE.y = textUvs.y + off.y; \\nvec4 textureIn = texture(tex2d, uv_AE); \\n return  textureIn; \\n}",


"common_error": "compiled successfully",


"exprRGBModeB": true,


"expr_current_channel": "inChannel",


"expr_pix": "pix",


"greenExpr": "return inChannel;",


"green_error": "compiled successfully",


"redExpr": "return inChannel;",


"red_error": "compiled successfully",


"rgbExpr": "return inChannel;",


"rgb_error": "compiled successfully"

}
}