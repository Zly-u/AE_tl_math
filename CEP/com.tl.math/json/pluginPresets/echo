{"composition": {"camera_position": "camera_pos","camera_rotation": "camera_rotation","camera_target": "camera_target","camera_zoom": "camera_zoom","compResolution": "compResolution","frame_rate": "fps","layerPosition": "layerPosition","layerScale": "layerScale","resolution": "resolution","time_frame": "timef","time_sec": "time"},"effectInfo": {"description": "WIP\\n\\necho pixel. quick way to clone a layer.","effectName": "tlMath","minimalPluginVersion": 115,"pluginVersion": 115,"presetName": "pixel echo","tags": ["echo"," repeat"]},"effectMode": {"evalModeB": false,"expr_modeB": false,"gl33_modeB": true},"flags": {"pixelsCallExternalInputB": [true,false,false,false],"presetHasWideInputB": false,"usesCameraB": false},"gl_expression": {"gl33_frag_error": "compiled successfully","gl33_frag_sh": "#version 330 \\n\\nuniform sampler2D texture1; // get an other layer\\n\\nuniform vec2 resolution;\\nin vec2 out_uvs;\\nuniform float num_echos;\\nuniform float offset_y;\\nuniform float offset_x;\\nvec2 textUvs =vec2 (out_uvs.x, 1- out_uvs.y);\\nout vec4 fragColorOut; // the output varaible\\n\\nvoid main(void)\\n{\\n        vec4 textureLayer =vec4(0.);\\n        for (int i=0; i<=num_echos; i++){\\n            vec2 off;\\n            off.x =textUvs.x+(offset_x*i/resolution.x);\\n            off.y =textUvs.y-(offset_y*i/resolution.y);\\n            textureLayer += texture (texture1,off*max(0,1-textureLayer.a));\\n        }\\n\\n        fragColorOut = textureLayer ; //let's do some mix with a slider\\n\\n}\\n\\n\\n\\n","gl33_vert_error": "compiled successfully","gl33_vert_sh": "#version 330 \\nin vec4 Position;\\nin vec2 UVs;\\nout vec4 out_pos;\\nout vec2 out_uvs;\\nuniform mat4 ModelviewProjection;\\nvoid main(void)\\n{\\nout_pos = ModelviewProjection * Position; \\n gl_Position = out_pos; \\nout_uvs = UVs;\\n}\\n"},"gui_settings": {"cboxGrp": {"grpName": "check box Group","grpVisibleB": false,"params": [{"defaultVal": [1],"name": "cbox_1","visibleB": false},{"defaultVal": [0],"name": "cbox_2","visibleB": false},{"defaultVal": [0],"name": "cbox_3","visibleB": false},{"defaultVal": [0],"name": "cbox_4","visibleB": false},{"defaultVal": [0],"name": "cbox_5","visibleB": false},{"defaultVal": [0],"name": "cbox_6","visibleB": false},{"defaultVal": [0],"name": "cbox_7","visibleB": false},{"defaultVal": [0],"name": "cbox_8","visibleB": false},{"defaultVal": [0],"name": "cbox_9","visibleB": false},{"defaultVal": [0],"name": "cbox_10","visibleB": false}]},"colorGrp": {"grpName": "3d color Group","grpVisibleB": false,"params": [{"defaultVal": [1,1,1],"name": "color_1","visibleB": false},{"defaultVal": [1,1,1],"name": "color_2","visibleB": false},{"defaultVal": [1,1,1],"name": "color_3","visibleB": false},{"defaultVal": [1,1,1],"name": "color_4","visibleB": false},{"defaultVal": [1,1,1],"name": "color_5","visibleB": false},{"defaultVal": [1,1,1],"name": "color_6","visibleB": false},{"defaultVal": [1,1,1],"name": "color_7","visibleB": false},{"defaultVal": [1,1,1],"name": "color_8","visibleB": false},{"defaultVal": [1,1,1],"name": "color_9","visibleB": false},{"defaultVal": [1,1,1],"name": "color_10","visibleB": false}]},"layerGrp": {"current_layer": {"name": "texture0"},"extLayer_1": {"name": "texture1","visibleB": true},"extLayer_2": {"name": "texture2","visibleB": false},"extLayer_3": {"name": "texture3","visibleB": false},"extLayer_4": {"name": "texture4","visibleB": false},"grpName": "Layer Group","grpVisibleB": true},"pointGrp": {"grpName": "3d Point Group","grpVisibleB": false,"params": [{"defaultVal": [50,50,50],"name": "point_1","visibleB": false},{"defaultVal": [50,50,50],"name": "point_2","visibleB": false},{"defaultVal": [50,50,50],"name": "point_3","visibleB": false},{"defaultVal": [50,50,50],"name": "point_4","visibleB": false},{"defaultVal": [50,50,50],"name": "point_5","visibleB": false},{"defaultVal": [50,50,50],"name": "point_6","visibleB": false},{"defaultVal": [50,50,50],"name": "point_7","visibleB": false},{"defaultVal": [50,50,50],"name": "point_8","visibleB": false},{"defaultVal": [50,50,50],"name": "point_9","visibleB": false},{"defaultVal": [50,50,50],"name": "point_10","visibleB": false}]},"rotationGrp": {"grpName": "rotation Group","grpVisibleB": false,"params": [{"defaultVal": [0],"name": "rotation_1","visibleB": false},{"defaultVal": [0],"name": "rotation_2","visibleB": false},{"defaultVal": [0],"name": "rotation_3","visibleB": false},{"defaultVal": [0],"name": "rotation_4","visibleB": false},{"defaultVal": [0],"name": "rotation_5","visibleB": false},{"defaultVal": [0],"name": "rotation_6","visibleB": false},{"defaultVal": [0],"name": "rotation_7","visibleB": false},{"defaultVal": [0],"name": "rotation_8","visibleB": false},{"defaultVal": [0],"name": "rotation_9","visibleB": false},{"defaultVal": [0],"name": "rotation_10","visibleB": false}]},"sliderGrp": {"grpName": "params","grpVisibleB": true,"params": [{"defaultVal": [10],"name": "num_echos","visibleB": true},{"defaultVal": [0],"name": "offset_x","visibleB": true},{"defaultVal": [10],"name": "offset_y","visibleB": true},{"defaultVal": [0],"name": "slider_4","visibleB": false},{"defaultVal": [0],"name": "slider_5","visibleB": false},{"defaultVal": [0],"name": "slider_6","visibleB": false},{"defaultVal": [0],"name": "slider_7","visibleB": false},{"defaultVal": [0],"name": "slider_8","visibleB": false},{"defaultVal": [0],"name": "slider_9","visibleB": false},{"defaultVal": [0],"name": "slider_10","visibleB": false}]}},"math_expression": {"alphaExpr": "return inChannel;","alpha_error": "compiled successfully","blueExpr": "return inChannel;","blue_error": " compiled successfully","commonExpr": "float getLuma(vec4 text)\\n {\\n return 0.3 * text.r + 0.59 * text.g + 0.11 * text.b; \\n}\\nvec4 textureOffset(sampler2D tex2d, vec2 off) {\\nvec2 uv_AE = out_uvs;\\nuv_AE.x =textUvs.x + off.x; \\nuv_AE.y = textUvs.y + off.y; \\nvec4 textureIn = texture(tex2d, uv_AE); \\n return  textureIn; \\n}","common_error": "compiled successfully","exprRGBModeB": true,"expr_current_channel": "inChannel","expr_pix": "pix","expr_rgb_channel": "inputRgb","greenExpr": "return inChannel;","green_error": "compiled successfully","redExpr": "return inChannel;","red_error": "compiled successfully","rgbExpr": "    vec3 result;\\n\\n        vec2 off;\\n\\n        off.x =textUvs.x;\\n        off.y =textUvs.y;\\n        vec4 textureLayer = texture (texture1,off);\\n        result =  textureLayer.rgb;\\n    return result;","rgb_error": "compiled successfully"}}