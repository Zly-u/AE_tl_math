{

"composition": {


"camera_position": "camera_pos",


"camera_rotation": "camera_rotation",


"camera_target": "camera_target",


"camera_zoom": "camera_zoom",


"compResolution": "compResolution",


"frame_rate": "fps",


"layerPosition": "layerPosition",


"layerScale": "layerScale",


"resolution": "resolution",


"time_frame": "timef",


"time_sec": "time"

},

"effectInfo": {


"description": "based on https://logik-matchbook.org/shader/crok_flow\\nshare alike non commercial license. \\nFlow is a noise  generator, similar to theAE tools but with a other approach.",


"effectName": "tlMath",


"minimalPluginVersion": 115,


"pluginVersion": 115,


"presetName": "flow",


"tags": [



"default",



"glsl",



"expr",



"skeleton"


]

},

"effectMode": {


"evalModeB": false,


"expr_modeB": false,


"gl33_modeB": true

},

"flags": {


"needsLumaB": false,


"pixelsCallExternalInputB": [



false,



false,



false,



false


],


"presetHasWideInputB": true,


"usesCameraB": false

},

"gl_expression": {


"gl33_frag_error": "compiled successfully",


"gl33_frag_sh": "// http://www.kamend.com/2012/06/perlin-noise-and-glsl/\\n//from  https://logik-matchbook.org/ for Autodesk flame\\n#version 330\\nuniform float time;\\nuniform vec2 resolution;\\nout vec4 colourOut;\\n\\n\\nuniform float warp;\\nuniform float offset;\\nuniform float amplitude;\\nuniform float zoom;\\n\\nuniform float Speed;\\nuniform float noise;\\nuniform float itterations;\\nuniform float brightness;\\nuniform float contrast;\\nuniform float gain;\\n\\nuniform vec3 center;\\nuniform vec2 speed;\\nuniform vec3 tint;\\n\\n\\n\\n\\n float fxtime = time *.0025 * Speed + offset;\\n\\n\\n\\n\\n\\n\\nfloat s_x = speed.x + 1.0;\\nfloat s_y = speed.y + 1.0;\\n\\nconst vec3 lumc = vec3(0.2125, 0.7154, 0.0721);\\n\\n\\n\\nvec4 mod289(vec4 x)\\n{\\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n \\nvec4 permute(vec4 x)\\n{\\n    return mod289(((x*34.0)+1.0)*x);\\n}\\n \\nvec4 taylorInvSqrt(vec4 r)\\n{\\n    return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n \\nvec2 fade(vec2 t) {\\n    return t*t*t*(t*(t*6.0-15.0)+10.0);\\n}\\n \\n// Classic Perlin noise\\nfloat cnoise(vec2 P)\\n{\\n    vec4 Pi = floor(P.xyxy) + vec4(0.0, 0.0, 1.0, 1.0);\\n    vec4 Pf = fract(P.xyxy) - vec4(0.0, 0.0, 1.0, 1.0);\\n    Pi = mod289(Pi); // To avoid truncation effects in permutation\\n    vec4 ix = Pi.xzxz;\\n    vec4 iy = Pi.yyww;\\n    vec4 fx = Pf.xzxz;\\n    vec4 fy = Pf.yyww;\\n     \\n    vec4 i = permute(permute(ix) + iy);\\n     \\n    vec4 gx = fract(i * (1.0 / 41.0)) * 2.0 - 1.0 ;\\n    vec4 gy = abs(gx) - 0.5 ;\\n    vec4 tx = floor(gx + 0.5);\\n    gx = gx - tx;\\n     \\n    vec2 g00 = vec2(gx.x,gy.x);\\n    vec2 g10 = vec2(gx.y,gy.y);\\n    vec2 g01 = vec2(gx.z,gy.z);\\n    vec2 g11 = vec2(gx.w,gy.w);\\n     \\n    vec4 norm = taylorInvSqrt(vec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11)));\\n    g00 *= norm.x;  \\n    g01 *= norm.y;  \\n    g10 *= norm.z;  \\n    g11 *= norm.w;  \\n     \\n    float n00 = dot(g00, vec2(fx.x, fy.x));\\n    float n10 = dot(g10, vec2(fx.y, fy.y));\\n    float n01 = dot(g01, vec2(fx.z, fy.z));\\n    float n11 = dot(g11, vec2(fx.w, fy.w));\\n     \\n    vec2 fade_xy = fade(Pf.xy);\\n    vec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);\\n    float n_xy = mix(n_x.x, n_x.y, fade_xy.y);\\n    return 2.3 * n_xy;\\n}\\n \\n// Classic Perlin noise, periodic variant\\nfloat pnoise(vec2 P, vec2 rep)\\n{\\n    vec4 Pi = floor(P.xyxy) + vec4(0.0, 0.0, 1.0, 1.0);\\n    vec4 Pf = fract(P.xyxy) - vec4(0.0, 0.0, 1.0, 1.0);\\n    Pi = mod(Pi, rep.xyxy); // To create noise with explicit period\\n    Pi = mod289(Pi);        // To avoid truncation effects in permutation\\n    vec4 ix = Pi.xzxz;\\n    vec4 iy = Pi.yyww;\\n    vec4 fx = Pf.xzxz;\\n    vec4 fy = Pf.yyww;\\n     \\n    vec4 i = permute(permute(ix) + iy);\\n     \\n    vec4 gx = fract(i * (1.0 / 41.0)) * 2.0 - 1.0 ;\\n    vec4 gy = abs(gx) - 0.5 ;\\n    vec4 tx = floor(gx + 0.5);\\n    gx = gx - tx;\\n     \\n    vec2 g00 = vec2(gx.x,gy.x);\\n    vec2 g10 = vec2(gx.y,gy.y);\\n    vec2 g01 = vec2(gx.z,gy.z);\\n    vec2 g11 = vec2(gx.w,gy.w);\\n     \\n    vec4 norm = taylorInvSqrt(vec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11)));\\n    g00 *= norm.x;  \\n    g01 *= norm.y;  \\n    g10 *= norm.z;  \\n    g11 *= norm.w;  \\n     \\n    float n00 = dot(g00, vec2(fx.x, fy.x));\\n    float n10 = dot(g10, vec2(fx.y, fy.y));\\n    float n01 = dot(g01, vec2(fx.z, fy.z));\\n    float n11 = dot(g11, vec2(fx.w, fy.w));\\n     \\n    vec2 fade_xy = fade(Pf.xy);\\n    vec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);\\n    float n_xy = mix(n_x.x, n_x.y, fade_xy.y);\\n    return 2.3 * n_xy;\\n}\\n \\nfloat fbm(vec2 P, int octaves, float lacunarity, float gain)\\n{\\n    float sum = 0.0;\\n    float amp = 0.5 * amplitude;\\n    vec2 pp = P;\\n     \\n    int i;\\n     \\n     \\n    for(int i=0 ; i < itterations; i++)\\n    {\\n        amp *= gain; \\n        sum += amp * cnoise(pp);\\n        pp *= lacunarity;\\n    }\\n    return sum;\\n \\n}\\n\\n \\nfloat pattern( in vec2 p, out vec2 q, out vec2 r , in float fxtime)\\n{\\n    float l = 2.3 * noise;\\n    float g = 0.4;\\n    int oc = 1; \\n     \\n    q.x = fbm( p + vec2(1.0 + (s_x * -1.2 * fxtime),1.0 + (s_y * -1.5 * fxtime)),oc,l,g);\\n    q.y = fbm( p + vec2(1.2 * fxtime,1.5 * time) ,oc,l,g);\\n     \\n    r.x = fbm( p + 4.0 * q + vec2(s_x *9.7,s_y * 3.8),oc,l,g );\\n    r.y = fbm( p + 4.0 * q + vec2(fxtime * -9.7,fxtime * -3.8) ,oc,l,g);\\n     \\n    return fbm( p + warp * r ,oc,l,g);\\n}\\n \\nvoid main() {\\n    vec3 avg_lum = vec3(0.5, 0.5, 0.5);\\n    vec2 q = 2.0 * (((gl_FragCoord.xy / resolution.xy) - 0.5) * 0.5 * zoom) + (center.xy * vec2(-1.0));\\n\\n    vec2 p = -1.0 + 2.0 * q;\\n    vec2 qq;\\n    vec2 r;\\n    \\n    float col = pattern(p,qq,r,fxtime);\\n    vec3 color = vec3(col);\\n    \\n    color = vec3(dot(color.rgb, lumc));\\n    color = mix(avg_lum, color, 0.8 * contrast);\\n    color = color - 1.0 + brightness;\\n    color = color * 2.0*gain;\\n    \\n          \\n    colourOut = vec4(color * tint,color);\\n}\\n",


"gl33_vert_error": "compiled successfully",


"gl33_vert_sh": "#version 330 \\n in vec4 Position;\\nin vec2 UVs;\\nout vec4 out_pos;\\nout vec2 out_uvs;\\nuniform mat4 ModelviewProjection;\\nvoid main(void)\\n{\\nout_pos = ModelviewProjection * Position; \\n gl_Position = out_pos; \\nout_uvs = UVs;\\n}"

},

"gui_settings": {


"cboxGrp": {



"grpName": "check box Group",



"grpVisibleB": false,



"params": [




{





"defaultVal": [






0





],





"name": "cbox_1",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "cbox_2",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "cbox_3",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "cbox_4",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "cbox_5",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "cbox_6",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "cbox_7",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "cbox_8",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "cbox_9",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "cbox_10",





"visibleB": false




}



]


},


"colorGrp": {



"grpName": "3d color Group",



"grpVisibleB": true,



"params": [




{





"defaultVal": [






1,






1,






1





],





"name": "tint",





"visibleB": true




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_2",





"visibleB": false




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_3",





"visibleB": false




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_4",





"visibleB": false




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_5",





"visibleB": false




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_6",





"visibleB": false




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_7",





"visibleB": false




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_8",





"visibleB": false




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_9",





"visibleB": false




},




{





"defaultVal": [






1,






1,






1





],





"name": "color_10",





"visibleB": false




}



]


},


"layerGrp": {



"current_layer": {




"name": "texture0"



},



"extLayer_1": {




"name": "texture1",




"poffName": "layer1_position_off",




"toffName": "layer1_time_off",




"visibleB": true



},



"extLayer_2": {




"name": "texture2",




"poffName": "layer2_position_off",




"toffName": "layer2_time_off",




"visibleB": true



},



"extLayer_3": {




"name": "texture3",




"poffName": "layer3_position_off",




"toffName": "layer3_time_off",




"visibleB": true



},



"extLayer_4": {




"name": "texture4",




"poffName": "layer4_position_off",




"toffName": "layer4_time_off",




"visibleB": true



},



"grpName": "Layer Group",



"grpVisibleB": true


},


"pointGrp": {



"grpName": "3d Point Group",



"grpVisibleB": true,



"params": [




{





"defaultVal": [






50,






50,






50





],





"name": "center",





"visibleB": true




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_2",





"visibleB": false




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_3",





"visibleB": false




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_4",





"visibleB": false




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_5",





"visibleB": false




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_6",





"visibleB": false




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_7",





"visibleB": false




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_8",





"visibleB": false




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_9",





"visibleB": false




},




{





"defaultVal": [






50,






50,






50





],





"name": "point_10",





"visibleB": false




}



]


},


"rotationGrp": {



"grpName": "rotation Group",



"grpVisibleB": false,



"params": [




{





"defaultVal": [






0





],





"name": "rotation_1",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_2",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_3",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_4",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_5",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_6",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_7",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_8",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_9",





"visibleB": false




},




{





"defaultVal": [






0





],





"name": "rotation_10",





"visibleB": false




}



]


},


"sliderGrp": {



"grpName": "Slider Group",



"grpVisibleB": true,



"params": [




{





"defaultVal": [






1





],





"name": "warp",





"visibleB": true




},




{





"defaultVal": [






1





],





"name": "offset",





"visibleB": true




},




{





"defaultVal": [






1





],





"name": "amplitude",





"visibleB": true




},




{





"defaultVal": [






1





],





"name": "zoom",





"visibleB": true




},




{





"defaultVal": [






1





],





"name": "Speed",





"visibleB": true




},




{





"defaultVal": [






1





],





"name": "noise",





"visibleB": true




},




{





"defaultVal": [






1





],





"name": "itterations",





"visibleB": true




},




{





"defaultVal": [






1





],





"name": "brightness",





"visibleB": true




},




{





"defaultVal": [






1





],





"name": "contrast",





"visibleB": true




},




{





"defaultVal": [






1





],





"name": "gain",





"visibleB": true




}



]


}

},

"math_expression": {


"alphaExpr": "return inChannel;",


"alpha_error": "compiled successfully",


"blueExpr": "return inChannel;",


"blue_error": "compiled successfully",


"exprRGBModeB": true,


"expr_current_channel": "inChannel",


"expr_pix": "pix",


"greenExpr": "return inChannel;",


"green_error": "compiled successfully",


"redExpr": "return inChannel;",


"red_error": "compiled successfully",


"rgbExpr": "return inChannel;",


"rgb_error": "compiled successfully"

}
}